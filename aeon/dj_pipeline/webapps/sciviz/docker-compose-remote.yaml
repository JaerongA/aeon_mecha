# HOST_UID=$(id -u) docker-compose -f docker-compose-remote.yaml up -d
#

version: '2.4'
services:
  pharus:
    cpus: 2.0
    mem_limit: 4g
    image: jverswijver/pharus:0.8.0py3.9
    environment:
      # - FLASK_ENV=development # enables logging to console from Flask
      - PHARUS_SPEC_PATH=/main/specsheet.yaml # for dynamic utils spec
    user: ${HOST_UID}:anaconda
    volumes:
      - ./specsheet.yaml:/main/specsheet.yaml #copy the spec over to /main/specs/YOUR_SPEC_NAME
      - ./apk_requirements.txt:/tmp/apk_requirements.txt
      - /ceph/aeon/aeon:/ceph/aeon/aeon
    command:
      - sh
      - -c
      - |
        apk add --update git g++ &&
        git clone -b datajoint_pipeline https://github.com/ttngu207/aeon_mecha.git &&
        pip install -e ./aeon_mecha &&
        gunicorn --bind 0.0.0.0:$${PHARUS_PORT} pharus.server:app
    # ports:
    # - "5000:5000"
    networks:
      - main
  sci-viz:
    cpus: 2.0
    mem_limit: 16g
    image: datajoint/sci-viz:2.3.0
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_DJSCIVIZ_BACKEND_PREFIX=/aeon/utils
      - DJSCIVIZ_SPEC_PATH=/main/specsheet.yaml
      - NODE_OPTIONS="--max-old-space-size=12000"
    volumes:
      - ./specsheet.yaml:/main/specsheet.yaml
    # ports:
    #   - "3000:3000"
    command:
      - sh
      - -c
      - |
        sh sci-viz-hotreload-prod.sh
    networks:
      - main
  reverse-proxy:
    image: datajoint/nginx:v0.2.4
    environment:
      - ADD_pharus_TYPE=REST
      - ADD_pharus_ENDPOINT=pharus:5000
      - ADD_pharus_PREFIX=/utils
      - ADD_sciviz_TYPE=REST
      - ADD_sciviz_ENDPOINT=sci-viz:3000
      - ADD_sciviz_PREFIX=/
      #      - HTTPS_PASSTHRU=TRUE
      #      - CERTBOT_HOST=letsencrypt:80
      - DEPLOYMENT_PORT
    #      - SUBDOMAINS
    #      - URL
    #    volumes:
    #      - ./letsencrypt-keys:/etc/letsencrypt:ro
    ports:
      #      - "443:443"
      - "${DEPLOYMENT_PORT}:80"
    networks:
      - main
networks:
  main:
