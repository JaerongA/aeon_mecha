version: 'v0.0.0'
LabBook: null
SciViz:
  auth:
    mode: database
  pages:
    Animals:
      route: /animals
      grids:
        grid2:
          type: fixed
          columns: 1
          row_height: 700
          components:
            Animals:
              route: /query1
              x: 0
              y: 0
              height: 1
              width: 1
              type: table
              restriction: >
                def restriction(**kwargs):
                    return dict(**kwargs)
              dj_query: >
                def dj_query(aeon_acquisition):
                    query = aeon_acquisition.Experiment.Subject()
                    return {'query': query, 'fetch_args': []}
    Sessions:
      route: /sessions
      grids:
        grid3:
          type: fixed
          columns: 1
          row_height: 700
          components:
            Sessions:
              route: /query2
              x: 0
              y: 0
              height: 1
              width: 1
              type: table
              restriction: >
                def restriction(**kwargs):
                    return dict(**kwargs)
              dj_query: >
                def dj_query(aeon_acquisition):
                    query = aeon_acquisition.Session.join(aeon_acquisition.SessionEnd, left=True).proj('session_end', session_duration='IFNULL(session_duration, -1)')
                    return {'query': query, 'fetch_args': []}

    SessionsSummary:
      route: /sessions_summary
      grids:
        grid3:
          type: fixed
          columns: 1
          row_height: 700
          components:
            Sessions Summary:
              route: /query3
              x: 0
              y: 0
              height: 1
              width: 1
              type: table
              restriction: >
                def restriction(**kwargs):
                    return dict(**kwargs)
              dj_query: >
                def dj_query(aeon_analysis):
                    query = aeon_analysis.SessionSummary
                    return {'query': query, 'fetch_args': []}

